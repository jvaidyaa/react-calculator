{"ast":null,"code":"var _jsxFileName = \"/Users/jvaidy/projectNew/react-js/calculator2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Button from './components/Button';\nimport Input from './components/Input';\nimport ClearButton from './components/ClearButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToInput = val => {\n      this.setState({\n        input: this.state.input + val\n      });\n    };\n\n    this.addZeroToInput = val => {\n      // only add zero if there is already a number present\n      if (this.state.input !== \"\") {\n        this.setState({\n          input: this.state.input + val\n        });\n      }\n    };\n\n    this.addDecimalToInput = val => {\n      // only add addDecimal if there is no current decimal point\n      if (this.state.input.indexOf(\".\") === -1) {\n        this.setState({\n          input: this.state.input + val\n        });\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: \"\"\n      });\n    };\n\n    this.add = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"plus\";\n    };\n\n    this.subtract = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"subtract\";\n    };\n\n    this.multiply = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"multiply\";\n    };\n\n    this.divide = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"divide\";\n    };\n\n    this.evaluate = () => {\n      this.state.currentNumber = this.state.input;\n\n      if (this.state.operator == \"plus\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) + parseInt(this.state.currentNumber)\n        });\n      } else if (this.state.operator == \"subtract\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) - parseInt(this.state.currentNumber)\n        });\n      } else if (this.state.operator == \"multiply\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) * parseInt(this.state.currentNumber)\n        });\n      } else if (this.state.operator == \"divide\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) / parseInt(this.state.currentNumber)\n        });\n      }\n    };\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calc-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            children: this.state.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addToInput,\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addToInput,\n            children: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addToInput,\n            children: \"9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addToInput,\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addToInput,\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addToInput,\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addToInput,\n            children: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addToInput,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addToInput,\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addToInput,\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addToInput,\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.add,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addDecimalToInput,\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addZeroToInput,\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.evaluate,\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: this.addToInput,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(ClearButton, {\n            handleClear: this.clearInput,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jvaidy/projectNew/react-js/calculator2/src/App.js"],"names":["React","Component","Button","Input","ClearButton","App","constructor","props","addToInput","val","setState","input","state","addZeroToInput","addDecimalToInput","indexOf","clearInput","add","previousNumber","operator","subtract","multiply","divide","evaluate","currentNumber","parseInt","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport './App.css';\nimport Button from './components/Button';\nimport Input from './components/Input';\nimport ClearButton from './components/ClearButton';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator:\"\"\n    };\n  }\n  addToInput = val =>{\n    this.setState({input: this.state.input + val});\n  };\n\n  addZeroToInput = val =>{\n    // only add zero if there is already a number present\n    if (this.state.input !== \"\"){\n      this.setState({input: this.state.input + val});\n    }\n  };\n  addDecimalToInput = val =>{\n    // only add addDecimal if there is no current decimal point\n    if (this.state.input.indexOf(\".\") === -1){\n      this.setState({input: this.state.input + val});\n    }\n  };\n\n  clearInput = () =>{\n    this.setState({input : \"\"});\n  };\n\n  add = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({input:\"\"});\n    this.state.operator = \"plus\";\n  }\n  subtract = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({input:\"\"});\n    this.state.operator = \"subtract\";\n  }\n  multiply = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({input:\"\"});\n    this.state.operator = \"multiply\";\n  }\n  divide = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({input:\"\"});\n    this.state.operator = \"divide\";\n  }\n\n  evaluate = () =>{\n    this.state.currentNumber = this.state.input;\n\n    if (this.state.operator == \"plus\"){\n      this.setState({\n        input :\n        parseInt(this.state.previousNumber)+\n        parseInt(this.state.currentNumber)\n      });\n    }else if (this.state.operator == \"subtract\"){\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) -\n          parseInt(this.state.currentNumber)\n      });\n    }else if (this.state.operator == \"multiply\"){\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) *\n          parseInt(this.state.currentNumber)\n      });\n    }else if (this.state.operator == \"divide\"){\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) /\n          parseInt(this.state.currentNumber)\n      });\n    }\n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n      <div className = \"calc-wrapper\">\n        <div className = \"row\">\n            <Input>{this.state.input}</Input>\n\n        </div>\n        <div className = \"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.addToInput}>/</Button>\n        </div>\n        <div className = \"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.addToInput}>*</Button>\n        </div>\n        <div className = \"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n        </div>\n        <div className = \"row\">\n            <Button handleClick={this.addDecimalToInput}>.</Button>\n            <Button handleClick={this.addZeroToInput}>0</Button>\n            <Button handleClick={this.evaluate}>=</Button>\n            <Button handleClick={this.addToInput}>-</Button>\n        </div>\n        <div className = \"row\">\n            <ClearButton handleClear={this.clearInput}\n            >Clear</ClearButton>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}